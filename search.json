[{"path":"https://matiasandina.github.io/fed3/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2021 Matias Andina Permission hereby granted, free charge, person obtaining copy software associated documentation files (‚ÄúSoftware‚Äù), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED ‚Äú‚Äù, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://matiasandina.github.io/fed3/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Matias Andina. Author, maintainer.","code":""},{"path":"https://matiasandina.github.io/fed3/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Andina M (2024). fed3: R package read analyze data FED3 devices. R package version 0.2.1, https://matiasandina.github.io/fed3/, https://github.com/matiasandina/fed3.","code":"@Manual{,   title = {fed3: An R package to read and analyze data from FED3 devices},   author = {Matias Andina},   year = {2024},   note = {R package version 0.2.1,     https://matiasandina.github.io/fed3/},   url = {https://github.com/matiasandina/fed3}, }"},{"path":"https://matiasandina.github.io/fed3/index.html","id":"fed3-","dir":"","previous_headings":"","what":"An R package to read and analyze data from FED3 devices","title":"An R package to read and analyze data from FED3 devices","text":"goal fed3 analyze data coming FED3 feeder devices KravitzLabDevices","code":""},{"path":"https://matiasandina.github.io/fed3/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"An R package to read and analyze data from FED3 devices","text":"can install current version fed3 :","code":"# Not yet in CRAN # install.packages(\"fed3\") devtools::install_github(\"matiasandina/fed3\")"},{"path":"https://matiasandina.github.io/fed3/index.html","id":"example","dir":"","previous_headings":"","what":"Example","title":"An R package to read and analyze data from FED3 devices","text":"","code":"library(tidyverse) library(fed3) ## Basic example code ## Reading multiple animals fed_files <- list.files(folder, pattern = \"^FED\", full.names = T) # assuming a vector of animal_ids that matches fed_files fed_files <- set_names(fed_files, animal_ids) fed_df <- map(fed_files, read_fed) %>% bind_rows(.id = \"animal_id\") # Maybe the same animal was given more than one fed, so you need to recalculate pellets fed_df <- fed_df %>% group_by(animal_id) %>% recalculate_pellets() # Plotting Pellets vs datetime ggplot(fed_df, aes(datetime, pellets, color = animal_id)) + geom_line()"},{"path":"https://matiasandina.github.io/fed3/index.html","id":"docs","dir":"","previous_headings":"","what":"Docs","title":"An R package to read and analyze data from FED3 devices","text":"üìñ Package documentation site ","code":""},{"path":"https://matiasandina.github.io/fed3/index.html","id":"acknowledgements","dir":"","previous_headings":"","what":"Acknowledgements","title":"An R package to read and analyze data from FED3 devices","text":"package draws lot inspiration python pacakge. logo reuses fed cartoon ","code":""},{"path":"https://matiasandina.github.io/fed3/reference/StatLights.html","id":null,"dir":"Reference","previous_headings":"","what":"StatLights ‚Äî StatLights","title":"StatLights ‚Äî StatLights","text":"custom ggplot2 extension shade areas plot according provided light hours. shades lights lights . Usage geom_lights() stat_ligths()","code":""},{"path":"https://matiasandina.github.io/fed3/reference/StatLights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"StatLights ‚Äî StatLights","text":"","code":"StatLights"},{"path":"https://matiasandina.github.io/fed3/reference/StatLights.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"StatLights ‚Äî StatLights","text":"object class StatLights (inherits Stat, ggproto, gg) length 3.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/StatLights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"StatLights ‚Äî StatLights","text":"lights_on_hour integer representing hour day (0-23) lights turn . lights_off_hour integer representing hour day (0-23) lights turn . fill string representing color shading. alpha numeric representing transparency shading, 0 (transparent) 1 (opaque).","code":""},{"path":"https://matiasandina.github.io/fed3/reference/StatLights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"StatLights ‚Äî StatLights","text":"ggplot2 layer added ggplot object.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/StatLights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"StatLights ‚Äî StatLights","text":"","code":"if (FALSE) { # \\dontrun{ ggplot(df, aes(x = Pi_Time, y = Pellet_Count)) +   stat_lights(fill = \"grey80\", alpha = 0.5, lights_on_hour = 7, lights_off_hour = 19) +   geom_line()  } # }"},{"path":"https://matiasandina.github.io/fed3/reference/add_zt.html","id":null,"dir":"Reference","previous_headings":"","what":"Add Zeitgeber Time (ZT) ‚Äî add_zt","title":"Add Zeitgeber Time (ZT) ‚Äî add_zt","text":"function adds new column zt input data.frame, contains datetime values datetime_col shifted lights_on_hour becomes new midnight (00:00:00).","code":""},{"path":"https://matiasandina.github.io/fed3/reference/add_zt.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add Zeitgeber Time (ZT) ‚Äî add_zt","text":"","code":"add_zt(df, datetime_col, lights_on_hour)"},{"path":"https://matiasandina.github.io/fed3/reference/add_zt.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add Zeitgeber Time (ZT) ‚Äî add_zt","text":"df data.frame datetime_col name column containing datetime values shifted lights_on_hour numeric value 1 23 representing hour lights turned , become new midnight (00:00:00)","code":""},{"path":"https://matiasandina.github.io/fed3/reference/add_zt.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add Zeitgeber Time (ZT) ‚Äî add_zt","text":"dataframe new zt column","code":""},{"path":[]},{"path":"https://matiasandina.github.io/fed3/reference/add_zt.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add Zeitgeber Time (ZT) ‚Äî add_zt","text":"","code":"df <- data.frame(   datetime_col = seq(from = as.POSIXct(\"2023-07-20 00:00:00\", tz = \"UTC\"),                      to = as.POSIXct(\"2023-07-21 00:00:00\", tz = \"UTC\"),                      by = \"hour\"),   value = runif(25) )  lights_on_hour = 6 df <- add_zt(df, datetime_col, lights_on_hour)"},{"path":"https://matiasandina.github.io/fed3/reference/backup_sd.html","id":null,"dir":"Reference","previous_headings":"","what":"Backup SD card ‚Äî backup_sd","title":"Backup SD card ‚Äî backup_sd","text":"Backup SD card","code":""},{"path":"https://matiasandina.github.io/fed3/reference/backup_sd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Backup SD card ‚Äî backup_sd","text":"","code":"backup_sd(sd_card = NULL, backup_dest = NULL)"},{"path":"https://matiasandina.github.io/fed3/reference/backup_sd.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Backup SD card ‚Äî backup_sd","text":"function finds FED3 files selected folder (SD card) stores user-defined folder.","code":""},{"path":[]},{"path":"https://matiasandina.github.io/fed3/reference/bin_pellets.html","id":null,"dir":"Reference","previous_headings":"","what":"Bin Pellets ‚Äî bin_pellets","title":"Bin Pellets ‚Äî bin_pellets","text":"Bins pellets based specified time interval bin data range.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/bin_pellets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bin Pellets ‚Äî bin_pellets","text":"","code":"bin_pellets(data, time_col, bin, label_first_break = TRUE)"},{"path":"https://matiasandina.github.io/fed3/reference/bin_pellets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bin Pellets ‚Äî bin_pellets","text":"data data frame containing pellet data. time_col datetime column use bin character string specifying time interval binning (e.g., \"1 hour\", \"30 minunte\"). label_first_break Logical indicating whether label first break start time (default TRUE).","code":""},{"path":"https://matiasandina.github.io/fed3/reference/bin_pellets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bin Pellets ‚Äî bin_pellets","text":"data frame binned pellet counts corresponding bin timestamps.","code":""},{"path":[]},{"path":"https://matiasandina.github.io/fed3/reference/bin_pellets_lightcycle.html","id":null,"dir":"Reference","previous_headings":"","what":"Bin Pellet Events According to Light Cycle ‚Äî bin_pellets_lightcycle","title":"Bin Pellet Events According to Light Cycle ‚Äî bin_pellets_lightcycle","text":"function assigns event light dark period, counts number events period. requires data frame contains datetime column pellet events. dates light cycles aligned (dark phase often spans one date), recommended users call add_zt() first bin zt instead datetime.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/bin_pellets_lightcycle.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bin Pellet Events According to Light Cycle ‚Äî bin_pellets_lightcycle","text":"","code":"bin_pellets_lightcycle(   data,   time_col,   lights_on_hour = 7,   lights_off_hour = 19 )"},{"path":"https://matiasandina.github.io/fed3/reference/bin_pellets_lightcycle.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Bin Pellet Events According to Light Cycle ‚Äî bin_pellets_lightcycle","text":"data data frame contains datetime column pellet events. time_col datetime column data frame. can use bare column name. recommended use \"zt\" column created add_zt() ensure light dark periods align correctly. lights_on_hour hour (0-23) light period starts. Default 7. lights_off_hour hour (0-23) light period ends. Default 19.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/bin_pellets_lightcycle.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Bin Pellet Events According to Light Cycle ‚Äî bin_pellets_lightcycle","text":"data.frame grouped original grouping variables, date light cycle period, additional column pellets indicating number events period.","code":""},{"path":[]},{"path":"https://matiasandina.github.io/fed3/reference/bin_pellets_lightcycle.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bin Pellet Events According to Light Cycle ‚Äî bin_pellets_lightcycle","text":"","code":"if (FALSE) { # \\dontrun{ # will have light cycle split by date read_fed(path) %>% recalculate_pellets() %>% add_zt(datetime) %>% bin_pellets_lightcycle(datetime) read_fed(path) %>% recalculate_pellets() %>% add_zt(datetime) %>% bin_pellets_lightcycle(datetime) # zt date will only contain full light/dark periods read_fed(path) %>% recalculate_pellets() %>% add_zt(datetime) %>% bin_pellets_lightcycle(zt) } # }"},{"path":"https://matiasandina.github.io/fed3/reference/check_duplicated.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Duplicated ‚Äî check_duplicated","title":"Check Duplicated ‚Äî check_duplicated","text":"Helper function check duplicated entries.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/check_duplicated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Duplicated ‚Äî check_duplicated","text":"","code":"check_duplicated(data, column)"},{"path":"https://matiasandina.github.io/fed3/reference/copy_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Copy Files ‚Äî copy_files","title":"Copy Files ‚Äî copy_files","text":"function copies files path new folder destiny. function also delete empty files, delete small files.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/copy_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Copy Files ‚Äî copy_files","text":"","code":"copy_files(file_list = NULL, from_dir = NULL, dest_dir = NULL)"},{"path":[]},{"path":"https://matiasandina.github.io/fed3/reference/deduplicate_datetime.html","id":null,"dir":"Reference","previous_headings":"","what":"Check Duplicated ‚Äî deduplicate_datetime","title":"Check Duplicated ‚Äî deduplicate_datetime","text":"precision FED clock seconds. might happen two events exact timestamp. helper function used check duplicated entries deduplicate using methods. function internally called read_fed() user advised first try several examples modifying deduplicate_method read_fed()","code":""},{"path":"https://matiasandina.github.io/fed3/reference/deduplicate_datetime.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check Duplicated ‚Äî deduplicate_datetime","text":"","code":"deduplicate_datetime(   data,   method = \"offset\",   offset = \"0.1 sec\",   reset_counts = FALSE,   reset_columns = c(\"Pellet_Count\", \"Left_Poke_Count\", \"Right_Poke_Count\") )"},{"path":"https://matiasandina.github.io/fed3/reference/deduplicate_datetime.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check Duplicated ‚Äî deduplicate_datetime","text":"data FED data frame read read_fed() method method deduplicate identical timestamps (default 'offset'). method must one 'keep_first', 'keep_last', 'remove', 'offset', 'interpolate'. offset offset added duplicate datetimes (e.g., '0.1 sec'). reset_counts whether reset reset_columns (default = FALSE). reset_columns columns reset reset_counts = TRUE.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/deduplicate_datetime.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check Duplicated ‚Äî deduplicate_datetime","text":"","code":"# data contains datetimes that will fail to parse and are duplicated fed3::duplicate_test_data #> # A tibble: 20 √ó 5 #>    datetime            Pellet_Count Left_Poke_Count Right_Poke_Count row_id #>    <chr>                      <dbl>           <dbl>            <dbl>  <int> #>  1 2023-06-10 08:00:00            1               1               10      1 #>  2 2023-06-10 08:01:00            2               2                9      2 #>  3 2023-06-10 08:02:00            3               3                8      3 #>  4 2023-06-10 08:03:00            4               4                7      4 #>  5 2023-06-10 08:04:00            5               5                6      5 #>  6 2023-06-10 08:05:00            6               6                5      6 #>  7 2023-06-10 08:06:00            7               7                4      7 #>  8 2023-06-10 08:06:00            8               8                3      8 #>  9 This will fail                NA               9                2      9 #> 10 2023-06-10 08:07:00           10              10                1     10 #> 11 2023-06-10 08:08:00            1               1               10     11 #> 12 2023-06-10 08:09:00            2               2                9     12 #> 13 2023-06-10 08:10:00            3               3                8     13 #> 14 2023-06-10 08:11:00            4               4                7     14 #> 15 2023-06-10 08:11:00            5               5                6     15 #> 16 2023-06-10 08:12:00            6               6                5     16 #> 17 2023-06-10 08:13:00            7               7                4     17 #> 18 This will fail too            NA               8                3     18 #> 19 2023-06-10 08:14:00            9               9                2     19 #> 20 2023-06-10 08:15:00           10              10                1     20 fed3:::deduplicate_datetime(duplicate_test_data, method = 'keep_first') #> Warning:  2 failed to parse. #> Warning: NA values found in `datetime` column after parsing. #>  Filling NAs with last observation carried forward. #> # A tibble: 16 √ó 5 #>    datetime            Pellet_Count Left_Poke_Count Right_Poke_Count row_id #>    <dttm>                     <dbl>           <dbl>            <dbl>  <int> #>  1 2023-06-10 08:00:00            1               1               10      1 #>  2 2023-06-10 08:01:00            2               2                9      2 #>  3 2023-06-10 08:02:00            3               3                8      3 #>  4 2023-06-10 08:03:00            4               4                7      4 #>  5 2023-06-10 08:04:00            5               5                6      5 #>  6 2023-06-10 08:05:00            6               6                5      6 #>  7 2023-06-10 08:06:00            7               7                4      7 #>  8 2023-06-10 08:07:00           10              10                1     10 #>  9 2023-06-10 08:08:00            1               1               10     11 #> 10 2023-06-10 08:09:00            2               2                9     12 #> 11 2023-06-10 08:10:00            3               3                8     13 #> 12 2023-06-10 08:11:00            4               4                7     14 #> 13 2023-06-10 08:12:00            6               6                5     16 #> 14 2023-06-10 08:13:00            7               7                4     17 #> 15 2023-06-10 08:14:00            9               9                2     19 #> 16 2023-06-10 08:15:00           10              10                1     20 fed3:::deduplicate_datetime(duplicate_test_data, method = 'offset', offset = \"1 sec\") #> Warning:  2 failed to parse. #> Warning: NA values found in `datetime` column after parsing. #>  Filling NAs with last observation carried forward. #> # A tibble: 20 √ó 5 #>    datetime            Pellet_Count Left_Poke_Count Right_Poke_Count row_id #>    <dttm>                     <dbl>           <dbl>            <dbl>  <int> #>  1 2023-06-10 08:00:00            1               1               10      1 #>  2 2023-06-10 08:01:00            2               2                9      2 #>  3 2023-06-10 08:02:00            3               3                8      3 #>  4 2023-06-10 08:03:00            4               4                7      4 #>  5 2023-06-10 08:04:00            5               5                6      5 #>  6 2023-06-10 08:05:00            6               6                5      6 #>  7 2023-06-10 08:06:00            7               7                4      7 #>  8 2023-06-10 08:06:01            8               8                3      8 #>  9 2023-06-10 08:06:02           NA               9                2      9 #> 10 2023-06-10 08:07:00           10              10                1     10 #> 11 2023-06-10 08:08:00            1               1               10     11 #> 12 2023-06-10 08:09:00            2               2                9     12 #> 13 2023-06-10 08:10:00            3               3                8     13 #> 14 2023-06-10 08:11:00            4               4                7     14 #> 15 2023-06-10 08:11:01            5               5                6     15 #> 16 2023-06-10 08:12:00            6               6                5     16 #> 17 2023-06-10 08:13:00            7               7                4     17 #> 18 2023-06-10 08:13:01           NA               8                3     18 #> 19 2023-06-10 08:14:00            9               9                2     19 #> 20 2023-06-10 08:15:00           10              10                1     20"},{"path":"https://matiasandina.github.io/fed3/reference/fed3-package.html","id":null,"dir":"Reference","previous_headings":"","what":"fed3: An R package to read and analyze data from FED3 devices ‚Äî fed3-package","title":"fed3: An R package to read and analyze data from FED3 devices ‚Äî fed3-package","text":"R package read analyze data FED3 devices","code":""},{"path":[]},{"path":"https://matiasandina.github.io/fed3/reference/fed3-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"fed3: An R package to read and analyze data from FED3 devices ‚Äî fed3-package","text":"Maintainer: Matias Andina matiasandina@gmail.com (ORCID)","code":""},{"path":"https://matiasandina.github.io/fed3/reference/fed_col_types.html","id":null,"dir":"Reference","previous_headings":"","what":"Fed Column Types ‚Äî fed_col_types","title":"Fed Column Types ‚Äî fed_col_types","text":"function provides column classes used read data FEDs. different library version might different column types, function returns types according lib_version.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/fed_col_types.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fed Column Types ‚Äî fed_col_types","text":"","code":"fed_col_types(lib_version = NULL)"},{"path":"https://matiasandina.github.io/fed3/reference/fed_col_types.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fed Column Types ‚Äî fed_col_types","text":"version character version FED_library used collect data","code":""},{"path":"https://matiasandina.github.io/fed3/reference/filter_pellets.html","id":null,"dir":"Reference","previous_headings":"","what":"Filter Pellets ‚Äî filter_pellets","title":"Filter Pellets ‚Äî filter_pellets","text":"function filters pellet events","code":""},{"path":"https://matiasandina.github.io/fed3/reference/filter_pellets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filter Pellets ‚Äî filter_pellets","text":"","code":"filter_pellets(df)"},{"path":"https://matiasandina.github.io/fed3/reference/find_fed3_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Find FED3 Files ‚Äî find_fed3_files","title":"Find FED3 Files ‚Äî find_fed3_files","text":"Searches FED3 files conform specific naming pattern within specified directory. Validates date format file names.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/find_fed3_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find FED3 Files ‚Äî find_fed3_files","text":"","code":"find_fed3_files(inputdir)"},{"path":"https://matiasandina.github.io/fed3/reference/find_fed3_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find FED3 Files ‚Äî find_fed3_files","text":"inputdir Directory search FED3 files.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/find_fed3_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Find FED3 Files ‚Äî find_fed3_files","text":"vector file paths match naming pattern valid dates.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/find_fed3_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Find FED3 Files ‚Äî find_fed3_files","text":"","code":"if (FALSE) { # \\dontrun{ find_fed3_files(\"path/to/directory\") } # }"},{"path":"https://matiasandina.github.io/fed3/reference/find_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Find Files ‚Äî find_files","title":"Find Files ‚Äî find_files","text":"function finds FED files using target dates","code":""},{"path":"https://matiasandina.github.io/fed3/reference/find_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Find Files ‚Äî find_files","text":"","code":"find_files(target_dates = NULL, directory = NULL)"},{"path":"https://matiasandina.github.io/fed3/reference/find_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Find Files ‚Äî find_files","text":"target_dates dates want retrieve directory directory directory path FED3 data located (default = NULL)","code":""},{"path":[]},{"path":"https://matiasandina.github.io/fed3/reference/is_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Is Date ‚Äî is_date","title":"Is Date ‚Äî is_date","text":"Helper function check things class Date POSIXt. Equivalent function(x) {lubridate::.Date(x) | lubridate::.POSIXt(x)}","code":""},{"path":"https://matiasandina.github.io/fed3/reference/is_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Is Date ‚Äî is_date","text":"","code":"is_date(x)"},{"path":"https://matiasandina.github.io/fed3/reference/is_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Is Date ‚Äî is_date","text":"boolean","code":""},{"path":"https://matiasandina.github.io/fed3/reference/make_lights.html","id":null,"dir":"Reference","previous_headings":"","what":"Make Lights ‚Äî make_lights","title":"Make Lights ‚Äî make_lights","text":"function make light shading pattern ggplot plots","code":""},{"path":"https://matiasandina.github.io/fed3/reference/make_lights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make Lights ‚Äî make_lights","text":"","code":"make_lights(params, df)"},{"path":"https://matiasandina.github.io/fed3/reference/make_lights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make Lights ‚Äî make_lights","text":"params list contains lights vector -light cycle df data.frame containing datetime column provide ranges experimental data","code":""},{"path":"https://matiasandina.github.io/fed3/reference/move_and_clean_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Move and Clean FED3 Files ‚Äî move_and_clean_files","title":"Move and Clean FED3 Files ‚Äî move_and_clean_files","text":"Removes files smaller 300 bytes moves remaining files specified subdirectory ('FED_data/FED_data').","code":""},{"path":"https://matiasandina.github.io/fed3/reference/move_and_clean_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Move and Clean FED3 Files ‚Äî move_and_clean_files","text":"","code":"move_and_clean_files(files, inputdir, remove_small_files = TRUE)"},{"path":"https://matiasandina.github.io/fed3/reference/move_and_clean_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Move and Clean FED3 Files ‚Äî move_and_clean_files","text":"files Vector FED3 file paths process. inputdir Base directory files processed. remove_small_files Logical indicating whether remove small files.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/move_and_clean_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Move and Clean FED3 Files ‚Äî move_and_clean_files","text":"list processed file paths.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/pipe.html","id":null,"dir":"Reference","previous_headings":"","what":"Pipe operator ‚Äî %>%","title":"Pipe operator ‚Äî %>%","text":"See magrittr::[\\%>\\%][magrittr::pipe] details.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/pipe.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Pipe operator ‚Äî %>%","text":"","code":"lhs %>% rhs"},{"path":"https://matiasandina.github.io/fed3/reference/read_fed.html","id":null,"dir":"Reference","previous_headings":"","what":"Read Fed Files ‚Äî read_fed","title":"Read Fed Files ‚Äî read_fed","text":"Read Fed Files","code":""},{"path":"https://matiasandina.github.io/fed3/reference/read_fed.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read Fed Files ‚Äî read_fed","text":"","code":"read_fed(filename, lib_version = NULL, deduplicate_method = \"offset\")"},{"path":"https://matiasandina.github.io/fed3/reference/read_fed.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read Fed Files ‚Äî read_fed","text":"filename file path csv file produced FED3 lib_version character library version used specifying columns deduplicate_method Method implemented deduplicate_datetime() deal duplicate timestamps recorded FED machines.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/read_fed.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Read Fed Files ‚Äî read_fed","text":"data.frame parsed columns added original FED data.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/read_fed.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Read Fed Files ‚Äî read_fed","text":"function read raw data column specifications (see fed_col_types()). append datetime formatting FED's clock datetime yyyy-mm-dd HH:MM:SS. parse session filename append resulting data.frame.","code":""},{"path":[]},{"path":"https://matiasandina.github.io/fed3/reference/recalculate_pellets.html","id":null,"dir":"Reference","previous_headings":"","what":"Recalculate Pellets ‚Äî recalculate_pellets","title":"Recalculate Pellets ‚Äî recalculate_pellets","text":"function recalculates pellets given FED_data data.frame contains identifier column. main reason behind one animal can receive one FED device. might happen due experiment design FED needed replaced experiment. Alternatively, used analyze several datasets coming different animals independent Device_Number.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/recalculate_pellets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Recalculate Pellets ‚Äî recalculate_pellets","text":"","code":"recalculate_pellets(df, group_var = NULL)"},{"path":"https://matiasandina.github.io/fed3/reference/recalculate_pellets.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Recalculate Pellets ‚Äî recalculate_pellets","text":"df data frame containing FED data. data.frame grouped, group_var disregarded. group_var string specifying column group . NULL (default), grouping performed.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/recalculate_pellets.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Recalculate Pellets ‚Äî recalculate_pellets","text":"data frame identical df recalculated pellet counts arranged datetime.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/set_alignment.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Alignment ‚Äî set_alignment","title":"Set Alignment ‚Äî set_alignment","text":"function used adjust timestamps dataset shifting either match first event entire dataset ('time') show elapsed time since first event group ('elapsed'). Note function assumes dataframe already grouped. recommended use df %>% group_by() %>% set_alignment(...) calling function.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/set_alignment.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Alignment ‚Äî set_alignment","text":"","code":"set_alignment(df, datetime_col, alignment)"},{"path":"https://matiasandina.github.io/fed3/reference/set_alignment.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Alignment ‚Äî set_alignment","text":"df grouped dataframe contains datetime data aligned. datetime_col name datetime column aligned. alignment type alignment done. can either 'time' 'elapsed'.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/set_alignment.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Alignment ‚Äî set_alignment","text":"dataframe new alignment.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/set_alignment.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Alignment ‚Äî set_alignment","text":"","code":"if (FALSE) { # \\dontrun{ df %>%   dplyr::group_by(group_col) %>%   set_alignment(datetime_col = your_datetime_column, alignment = \"time\") } # }"},{"path":"https://matiasandina.github.io/fed3/reference/tidy_fed3_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Tidy FED3 Files ‚Äî tidy_fed3_files","title":"Tidy FED3 Files ‚Äî tidy_fed3_files","text":"Handles directory selection, file finding, file management operations FED3 files.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/tidy_fed3_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tidy FED3 Files ‚Äî tidy_fed3_files","text":"","code":"tidy_fed3_files(inputdir = NULL, remove_small_files = TRUE)"},{"path":"https://matiasandina.github.io/fed3/reference/tidy_fed3_files.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tidy FED3 Files ‚Äî tidy_fed3_files","text":"inputdir Optional directory search FED3 files. provided, directory selection dialog open. remove_small_files Logical indicating whether files smaller 300 bytes removed.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/tidy_fed3_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tidy FED3 Files ‚Äî tidy_fed3_files","text":"","code":"if (FALSE) { # \\dontrun{ tidy_fed3_files() } # }"},{"path":"https://matiasandina.github.io/fed3/reference/use_pi_time.html","id":null,"dir":"Reference","previous_headings":"","what":"Adjust datetime in FED data using Pi_Time from FEDWatcher ‚Äî use_pi_time","title":"Adjust datetime in FED data using Pi_Time from FEDWatcher ‚Äî use_pi_time","text":"function adjusts time fed_df dataset using linear model trained data coming FEDWatcher (Pi_Time NA). can use function even fed_df fw_df fully overlap time.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/use_pi_time.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Adjust datetime in FED data using Pi_Time from FEDWatcher ‚Äî use_pi_time","text":"","code":"use_pi_time(fed_df, fw_df)"},{"path":"https://matiasandina.github.io/fed3/reference/use_pi_time.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Adjust datetime in FED data using Pi_Time from FEDWatcher ‚Äî use_pi_time","text":"fed_df data frame, result fed3::read_fed(...). fw_df data frame, result fed3::read_fed(..., lib_version = \"fw\").","code":""},{"path":"https://matiasandina.github.io/fed3/reference/use_pi_time.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Adjust datetime in FED data using Pi_Time from FEDWatcher ‚Äî use_pi_time","text":"data frame identical fed_df Pi_Time adjusted based linear model trained fw_df.","code":""},{"path":"https://matiasandina.github.io/fed3/reference/use_pi_time.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Adjust datetime in FED data using Pi_Time from FEDWatcher ‚Äî use_pi_time","text":"","code":"if (FALSE) { # \\dontrun{ fed_df <- fed3::read_fed(...) fw_df <- fed3::read_fed(..., lib_version = \"fw\") fed_df_adjusted <- use_pi_time(fed_df, fw_df) } # }"},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":[]},{"path":"https://matiasandina.github.io/fed3/news/index.html","id":"fed3-013","dir":"Changelog","previous_headings":"","what":"fed3 0.1.3","title":"fed3 0.1.3","text":"Improved usage bin_pellets_lightcycle() made factor light_cycle column #12 Improved logic make_lights.R, backend geom_lights(). Commit a700cbb1 seems fix #5 .","code":""},{"path":[]},{"path":"https://matiasandina.github.io/fed3/news/index.html","id":"fed3-011","dir":"Changelog","previous_headings":"","what":"fed3 0.1.1","title":"fed3 0.1.1","text":"Added clock dependency better handle times different time locales Improved bunch bugs recalculate_pellets(), bin_pellets() Added bin_pellets_lightcycle()","code":""},{"path":[]},{"path":"https://matiasandina.github.io/fed3/news/index.html","id":"fed3-0009000","dir":"Changelog","previous_headings":"","what":"fed3 0.0.0.9000","title":"fed3 0.0.0.9000","text":"Added NEWS.md file track changes package.","code":""}]
